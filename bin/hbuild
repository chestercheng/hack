#!/bin/bash

usage () {
  echo "usage: $(basename $0) [opt|dbg] script"
}

if [[ $# -eq 1 ]] ; then
  scriptname=$1
  export SCRIPTDIR=$YHROOT/build.d/$scriptname
  export FLAVOR="${FLAVOR:=opt}"
  echo "FLAVOR defaults to $FLAVOR"
elif [[ $# -eq 2 ]] ; then
  scriptname=$2
  export SCRIPTDIR=$YHROOT/build.d/$scriptname
  export FLAVOR="${FLAVOR:=$1}"
  valids="opt dbg"
  for valid in $valids ; do
    if [ "$FLAVOR" == "$valid" ] ; then
      unset valid ; break
    fi
  done
  if [ -n "$valid" ] ; then
    echo "FLAVOR set to $FLAVOR, not in \"$valids\""
    usage ; exit
  fi
  unset valids
else
  echo "wrong arguments"
  usage ; exit
fi

if [ -f $YHROOT/etc/buildutils.sh ]; then source $YHROOT/etc/buildutils.sh; fi

showrealpath () {
 echo "$(cd "$(dirname $1)" && pwd)/$1"
}
export -f showrealpath

download () {
  loc=$1
  url=$2
  md5hash=$3
  if [ $(uname) == Darwin ] ; then
    md5="md5 -q"
  elif [ $(uname) == Linux ] ; then
    md5=md5sum
  fi
  if [ ! -e $loc ] || [ $md5hash != `$md5 $loc | cut -d ' ' -f 1` ] ; then
    mkdir -p $(dirname $loc)
    rm -f $loc
    echo "Download from $url"
    curl -sSL -o $loc $url
  fi
  if [ $md5hash != `$md5 $loc | cut -d ' ' -f 1` ] ; then
    echo "$(basename $loc) md5 hash $md5hash but got `$md5 $loc`"
  else
    echo "$(basename $loc) md5 hash $md5hash confirmed"
  fi
}
export -f download

YHDL="${YHDL:=$YHROOT/downloaded}"
mkdir -p $YHDL
export YHDL="$(cd $YHDL && pwd)"

script=$SCRIPTDIR/build-$scriptname.sh
if [ ! -e $script ]; then
  script=$SCRIPTDIR/build.sh
fi

if [ -e $script ] ; then
  echo "execute building script \"$script\" ${@:$(($#+1))} ..."
  echo
  bash $script "${@:$(($#+1))}"
  echo
  echo "finished building script \"$script\"."
else
  echo "neither build-$scriptname.sh nor build.sh is found in $SCRIPTDIR/"
fi

# vim: set et nu nobomb fenc=utf8 ft=sh ff=unix sw=2 ts=2:
